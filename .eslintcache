[{"C:\\Users\\User\\Desktop\\React\\rbd\\src\\index.js":"1","C:\\Users\\User\\Desktop\\React\\rbd\\src\\App.js":"2","C:\\Users\\User\\Desktop\\React\\rbd\\src\\components\\Draggeble\\DragContext.js":"3","C:\\Users\\User\\Desktop\\React\\rbd\\src\\components\\SearchBox\\SearchBox.js":"4","C:\\Users\\User\\Desktop\\React\\rbd\\src\\components\\Droppable\\DropContext.js":"5","C:\\Users\\User\\Desktop\\React\\rbd\\src\\components\\Form\\Form.js":"6","C:\\Users\\User\\Desktop\\React\\rbd\\src\\components\\DnDSection\\DropOff.js":"7","C:\\Users\\User\\Desktop\\React\\rbd\\src\\components\\Login\\Login.js":"8","C:\\Users\\User\\Desktop\\React\\rbd\\src\\components\\SignUp\\SignUp.js":"9","C:\\Users\\User\\Desktop\\React\\rbd\\src\\components\\Firebase\\Firebase.js":"10"},{"size":194,"mtime":1612466394046,"results":"11","hashOfConfig":"12"},{"size":663,"mtime":1612465876419,"results":"13","hashOfConfig":"12"},{"size":360,"mtime":1612462283329,"results":"14","hashOfConfig":"12"},{"size":368,"mtime":1612438941354,"results":"15","hashOfConfig":"12"},{"size":892,"mtime":1612462296952,"results":"16","hashOfConfig":"12"},{"size":1084,"mtime":1612460673848,"results":"17","hashOfConfig":"12"},{"size":4712,"mtime":1612462386655,"results":"18","hashOfConfig":"12"},{"size":1947,"mtime":1612464555461,"results":"19","hashOfConfig":"12"},{"size":1977,"mtime":1612464694280,"results":"20","hashOfConfig":"12"},{"size":526,"mtime":1612466192817,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1s1rd41",{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"26"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\User\\Desktop\\React\\rbd\\src\\index.js",[],"C:\\Users\\User\\Desktop\\React\\rbd\\src\\App.js",[],["44","45"],"C:\\Users\\User\\Desktop\\React\\rbd\\src\\components\\Draggeble\\DragContext.js",[],"C:\\Users\\User\\Desktop\\React\\rbd\\src\\components\\SearchBox\\SearchBox.js",[],"C:\\Users\\User\\Desktop\\React\\rbd\\src\\components\\Droppable\\DropContext.js",[],"C:\\Users\\User\\Desktop\\React\\rbd\\src\\components\\Form\\Form.js",[],"C:\\Users\\User\\Desktop\\React\\rbd\\src\\components\\DnDSection\\DropOff.js",["46","47"],"import React,{useState} from 'react';\r\nimport {DragDropContext,Droppable} from 'react-beautiful-dnd';\r\nimport './DropOff.css';\r\nimport SearchBox from '../SearchBox/SearchBox'\r\nimport Form from '../Form/Form';\r\nimport DropContext from '../Droppable/DropContext'\r\nimport fire from '../Firebase/Firebase'\r\n\r\nfunction DragNDrop({SetHasAccount}){\r\n\r\n\r\n    const [Mylist, SetMylist]=useState([])\r\n\r\n    const columns ={\r\n        \"Todo\":{\r\n            name:\"To Do's\",\r\n            items : Mylist\r\n        },\r\n        \"Ip\":{\r\n            name:\"In Progress\",\r\n            items:[]\r\n        },\r\n        \"Comp\":{\r\n            name:\"Completed\",\r\n            items:[]\r\n        }\r\n    }\r\n\r\n    const [Todos,UseTodos]=useState(columns)\r\n\r\n    const onSearchChange = (e) =>{\r\n        const ip =[...Todos.Ip.items]\r\n        const comp =[...Todos.Comp.items] \r\n        if(e.target.value.trim() !== \"\"){ \r\n        const filter = Todos.Todo.items.filter( value =>{\r\n            if(value.content.toLowerCase().includes(e.target.value.toLowerCase()))\r\n            return value\r\n        })\r\n        UseTodos(\r\n            {\r\n                \"Todo\":{\r\n                    name:\"To Do's\",\r\n                    items : filter\r\n                },\r\n                \"Ip\":{\r\n                    name:\"In Progress\",\r\n                    items:ip\r\n                },\r\n                \"Comp\":{\r\n                    name:\"Completed\",\r\n                    items:comp\r\n                }\r\n            }\r\n        \r\n        )\r\n        }\r\n        else{\r\n\r\n            const array = ip.concat(comp)\r\n            const filter = Mylist.filter( value =>{\r\n                if(!array.includes(value)){\r\n                    return value\r\n                }\r\n            })\r\n            UseTodos({\r\n                    \"Todo\":{\r\n                        name:\"To Do's\",\r\n                        items : filter\r\n                    },\r\n                    \"Ip\":{\r\n                        name:\"In Progress\",\r\n                        items: ip\r\n                    },\r\n                    \"Comp\":{\r\n                        name:\"Completed\",\r\n                        items: comp\r\n                    }\r\n                }\r\n            )    \r\n        }\r\n\r\n        \r\n        \r\n    }\r\n\r\n\r\n\r\n    const onDragEnd = (result,Todos,UseTodos) =>{\r\n        if(!result.destination) return;\r\n        const {source , destination}=result;\r\n        if(source.droppableId !== destination.droppableId){\r\n            const sourceColumn =Todos[source.droppableId];\r\n            const destColumn = Todos[destination.droppableId];\r\n            const sourceitems =[...sourceColumn.items];\r\n            const destitems =[...destColumn.items];\r\n            const [removed] = sourceitems.splice(source.index,1);\r\n            destitems.splice(destination.index,0,removed)\r\n            UseTodos({\r\n                ...Todos,\r\n                [source.droppableId]:{\r\n                    ...sourceColumn,\r\n                    items:sourceitems\r\n                },\r\n                [destination.droppableId]:{\r\n                    ...destColumn,\r\n                    items:destitems\r\n                }\r\n            }); \r\n            }\r\n        else{\r\n        const column = Todos[source.droppableId]\r\n        const Arr = [...column.items];\r\n        const [removed]=Arr.splice(source.index,1);\r\n        Arr.splice(destination.index,0,removed);\r\n    \r\n        UseTodos({\r\n            ...Todos,\r\n            [source.droppableId]:{\r\n                ...column,\r\n                items:Arr\r\n            }\r\n        });\r\n        }\r\n      }\r\n\r\n    const handleSignOut = (e) =>{\r\n        e.preventDefault()\r\n        SetHasAccount(true)\r\n        fire.auth().signOut()\r\n\r\n    }\r\n      \r\n    return(\r\n        <div>\r\n        <button className =\"Signout\" onClick={handleSignOut} >Sign Out</button>\r\n        <h1>My Plan For Today </h1>\r\n        <Form UseTodos={UseTodos} Mylist={Mylist} SetMylist={SetMylist}/>\r\n        <DragDropContext onDragEnd={result=>onDragEnd(result,Todos,UseTodos)}>\r\n        <div  className=\"grid-container\">\r\n        {Object.entries(Todos).map(([id,column])=>{\r\n            return(\r\n            <div key ={id}>\r\n            <h3 className=\"header\">{column.name}</h3>\r\n            <Droppable droppableId= {id} key={id}>\r\n                {(provided,snapshot)=>{\r\n                    return(\r\n                        <DropContext column={column} provided={provided} snapshot={snapshot}   />\r\n                    )\r\n                }}\r\n            </Droppable>\r\n            </div>\r\n\r\n            \r\n            )\r\n        })}    \r\n        </div>   \r\n        </DragDropContext>\r\n        <SearchBox searchChange={onSearchChange} />\r\n        </div>\r\n\r\n\r\n    )\r\n\r\n\r\n}\r\n\r\n\r\nexport default DragNDrop;","C:\\Users\\User\\Desktop\\React\\rbd\\src\\components\\Login\\Login.js",[],"C:\\Users\\User\\Desktop\\React\\rbd\\src\\components\\SignUp\\SignUp.js",[],"C:\\Users\\User\\Desktop\\React\\rbd\\src\\components\\Firebase\\Firebase.js",[],{"ruleId":"48","replacedBy":"49"},{"ruleId":"50","replacedBy":"51"},{"ruleId":"52","severity":1,"message":"53","line":35,"column":55,"nodeType":"54","messageId":"55","endLine":35,"endColumn":57},{"ruleId":"52","severity":1,"message":"53","line":60,"column":49,"nodeType":"54","messageId":"55","endLine":60,"endColumn":51},"no-native-reassign",["56"],"no-negated-in-lhs",["57"],"array-callback-return","Array.prototype.filter() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","no-global-assign","no-unsafe-negation"]